#
# (c) Copyright 2015,2016 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---
- name: vertica | start | check database status
  sudo_user: dbadmin
  command: /opt/vertica/bin/admintools -t view_cluster -d {{vertica_database_name}}
  register: running_result
  run_once_per: verb_hosts.FND_VDB
  ignore_errors: yes

- name: vertica | start | start vertica database (when down)
  sudo_user: dbadmin
  command: /opt/vertica/bin/admintools -t start_db -d {{vertica_database_name}} -p "{{vertica_dbadmin_password| quote }}" -i
  register: status_start
  failed_when: status_start | failed
  run_once_per: verb_hosts.FND_VDB
  when: running_result.stdout.find("INITIALIZING") == -1 and running_result.stdout.find("UP") == -1 
  no_log: True

- name: vertica | start | start vertica agent service
  service: name=vertica_agent state=started

- name: vertica | start | check verticad
  command: /etc/init.d/verticad status
  register: verticad_status_result
  ignore_errors: yes
  changed_when: false

- name: vertica | start | start verticad
  command: /etc/init.d/verticad start
  when: verticad_status_result | failed and not start_one_node

- name: vertica | start | force restart vertica if running on one node
  sudo_user: dbadmin
  command: /opt/vertica/bin/admintools -t restart_node -d {{ vertica_database_name }} -s {{ play_hosts[0] }} -p "{{ vertica_dbadmin_password }}" -i -F
  when: verticad_status_result | failed and start_one_node
  no_log: True

- name: vertica | start | check vertica_agent
  command: /etc/init.d/vertica_agent status
  register: vertica_agent_status_result
  ignore_errors: yes
  changed_when: false

- name: vertica | start | start vertica_agent
  command: /etc/init.d/vertica_agent start
  when: vertica_agent_status_result | failed

- name: vertica | start | wait for vertica port
  wait_for: port={{vertica_client_port}} host='127.0.0.1' state=started timeout={{monasca_wait_for_period}}
