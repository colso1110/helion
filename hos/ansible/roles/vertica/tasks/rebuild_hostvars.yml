#
# (c) Copyright 2015,2016 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---
- name: Check status of dbadmin ssh file
  stat: path={{ vertica_dbadmin_home }}/.ssh/id_rsa
  register: dbadmin_ssh_status

- name: Check status of vertica agent key file
  stat: path={{ vertica_config_dir }}/share/agent.key
  register: vertica_agent_key_status

- name: Init rebuild fact
  set_fact: rebuild_user=False rebuild_vertica=False

- name: Set rebuild fact true when this is the rebuild host for recreating the vertica user
  set_fact: rebuild_user=True
  when: not dbadmin_ssh_status.stat.exists

- name: Set rebuild fact true when this is the rebuild host for rejoining the vertica cluster
  set_fact: rebuild_vertica=True
  when: not vertica_agent_key_status.stat.exists

- name: Read in private ssh key
  slurp: src={{ vertica_dbadmin_home }}/.ssh/id_rsa
  register: private_key_info
  when: vertica_ssh_private_key is not defined and not rebuild_user

- name: Read in public ssh key
  slurp: src={{ vertica_dbadmin_home }}/.ssh/id_rsa.pub
  register: public_key_info
  when: vertica_ssh_public_key is not defined and not rebuild_user

# sets the ssh keys in hostvars
- name: Set public and private ssh key variables
  set_fact: vertica_ssh_private_key="{{ private_key_info.content | b64decode }}" vertica_ssh_public_key="{{ public_key_info.content | b64decode }}"
  when: vertica_ssh_private_key is not defined and not rebuild_user

- name: Read in agent key
  slurp: src={{ vertica_config_dir }}/share/agent.key
  register: agent_key_info
  when: vertica_agent_key is not defined and not rebuild_vertica

- name: Read in agent cert
  slurp: src={{ vertica_config_dir }}/share/agent.cert
  register: agent_cert_info
  when: vertica_agent_cert is not defined and not rebuild_vertica

- name: Read in agent pem
  slurp: src={{ vertica_config_dir }}/share/agent.pem
  register: agent_pem_info
  when: vertica_agent_pem is not defined and not rebuild_vertica

# sets the agent keys in hostvars
- name: Set agent ssl variables
  set_fact: vertica_agent_key="{{ agent_key_info.content | b64decode }}" vertica_agent_cert="{{ agent_cert_info.content | b64decode }}" vertica_agent_pem="{{ agent_pem_info.content | b64decode }}"
  when: vertica_agent_key is not defined and not rebuild_vertica

# entire site deploy creates the correct admintools config
- name: Read in admintools config
  slurp: src={{ vertica_config_dir }}/admintools.conf
  register: admintools_info
  when: admintools_conf is not defined and not rebuild_vertica

- name: Set admintools_conf in hostvars
  set_fact: admintools_conf="{{ admintools_info.content | b64decode }}"
  when: admintools_conf is not defined and not rebuild_vertica

- name: Set rebuild_ip fact
  set_fact: rebuild_ip="{{ host.bind.FND_VDB.internal.ip_address }}"
  when: rebuild_user
