#
# (c) Copyright 2015,2016 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

# In this task we pull the ring files from all potential builder and backup
# nodes. Hence, we only need one server to be up to get the latest
# version of the rings. If all are down, we continue to use the rings we
# already have (since deploy_dir is unchanged).
# If this is first play after this node is reimaged *and* all builder and
# backups are down, this play will fail when it later attempts to copy files
# to /etc/swift.
# DO NOT refactor to use rsync module. It cannot be used for this action
- name: swiftlm-ring-supervisor | deploy-rings | Pull ring files from builder nodes
  command: rsync --archive --update
           {{ item.host }}::rings/
           {{ swiftlm_etc }}/{{ this_swift_instance }}/deploy_dir
  ignore_errors: yes
  become: yes
  with_items: "{{ builder_backup_nodes }}"

- name: swiftlm-ring-supervisor| deploy-rings | Create final ring destination /etc/swift
  # May already exist
  file:
    path: "{{ swift_dir }}"
    state: directory
    owner: "{{ swift_user }}"
    group: "{{ swift_group }}"
    mode: "0755"
  become: yes

- name: swiftlm-ring-supervisor | deploy-rings | Copy rings to /etc/swift
  swift_copy_rings:
    src: "{{ swiftlm_etc }}/{{ this_swift_instance }}/deploy_dir"
    dest: "{{ swift_dir }}"
    owner: "{{ swift_user }}"
    group: "{{ swift_group }}"
    mode: "0440"
    remove: "yes"
  become: yes



