#
# (c) Copyright 2015-2016 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

heat_system_user: heat
heat_system_group: heat

heat_log_file_location: /var/log/heat

heat_stack_user_domain_name: heat
heat_stack_domain_admin_user: heat_domain_admin
# TODO : generate random password
heat_stack_domain_admin_user_password: password
# This variable is set by the keystone_domain_setup.yml playbook in pre configure task
stack_domain_id : unset

# Audit
heat_api_audit_config: "{{ heat_service_conf_dir }}/heat_api_audit_map.conf"
heat_audit_enable: "{{ HEA.audit.enabled }}"
heat_audit_log_location: "{{ HEA.audit.dir }}/heat"
heat_audit_notification_driver: log
heat_audit_log_group: adm

# heat.conf config options
## [DEFAULT]
verbose : "True"
debug : "True"
log_dir : "/var/log/heat"
region_name_for_services : "{{ HEA_API.advertises.vips.public[0].region_name }}"
auth_encryption_key : "040b67e76d211aaa326db524bc026666"

heat_watch_server_url: >
  {{ HEA_ACW | item('advertises.vips.public[0].url',
     default='http://' ~ HEA_ACW.advertises.vips.public[0].host ~ ':'
             ~ HEA_ACW.advertises.vips.public[0].port) }}
heat_waitcondition_server_url: >
  {{ HEA_ACF | item('advertises.vips.public[0].url',
     default='http://' ~ HEA_ACF.advertises.vips.public[0].host ~ ':'
             ~ HEA_ACF.advertises.vips.public[0].port) }}/v1/waitcondition
heat_metadata_server_url: >
  {{ HEA_ACF | item('advertises.vips.public[0].url',
     default='http://' ~ HEA_ACF.advertises.vips.public[0].host ~ ':'
             ~ HEA_ACF.advertises.vips.public[0].port) }}

heat_rabbit_userid : "{{ HEA.consumes_FND_RMQ.vars.accounts.heat.username }}"
heat_rabbit_password : "{{ HEA.consumes_FND_RMQ.vars.accounts.heat.password }}"
_heat_rabbit_hosts_list: >
  {{ HEA_API | item('consumes_FND_RMQ.members.private',
     default=( HEA_API | item('consumes_FND_RMQ.members.public') )) }}
heat_rabbit_hosts: "{% for x in _heat_rabbit_hosts_list %}{{ x.host }}:{{ x.port }}{%if not loop.last %},{% endif %}{% endfor %}"
heat_rabbit_use_ssl: "{{ HEA.consumes_FND_RMQ.members.private[0].use_tlsâ€‚}}"
heat_notification_topic : "notifications"
heat_notification_driver : "messaging"
heat_stack_user_role: "heat_stack_user"
encrypt_parameters_and_properties : "True"

## [database]
heat_database_connection : >
  {{ 'mysql://' ~ HEA_ENG.consumes_FND_MDB.vars.accounts.heat.username ~ ':' ~
     HEA_ENG.consumes_FND_MDB.vars.accounts.heat.password | urlencode ~ '@' ~
     HEA_ENG.consumes_FND_MDB.vips.private[0].host ~ '/heat?charset=utf8' }}{{ heat_db_ssl }}

## [keystone_authtoken]
heat_keystone_admin_tenant_name : "{{ KEY_API.vars.keystone_service_tenant }}"
heat_keystone_admin_password : "{{ HEA_API.consumes_KEY_API.vars.keystone_heat_password | quote }}"
heat_keystone_admin_user : "{{ HEA_API.consumes_KEY_API.vars.keystone_heat_user }}"

heat_keystone_auth_uri: "{{ HEA_API.consumes_KEY_API.vips.private[0].url }}/v2.0"
heat_keystone_identity_uri: "{{ HEA_API.consumes_KEY_API.vips.private[0].url }}"

## [ec2authtoken]
ec2_auth_uri: >
  {{ HEA_API.consumes_KEY_API.vips.private[0].url }}/v2.0

## [heat_api]
heat_api_workers : "2"
heat_api_bind_host: >
  {{ host | item('bind.HEA_API.internal.ip_address') }}

## [heat_api_cfn]
heat_api_cfn_bind_host: >
  {{ host | item('bind.HEA_ACF.internal.ip_address') }}

## [heat_api_cloudwatch]
heat_api_cloudwatch_bind_host: >
  {{ host | item('bind.HEA_ACW.internal.ip_address') }}

## [paste_deploy]
api_paste_config_path : "{{ heat_service_conf_dir }}/api-paste.ini"

## [clients]
heat_endpoint_type: "internalURL"

## [ssl]
heat_ca_file : "/etc/ssl/certs/ca-certificates.crt"
heat_db_ssl: "{% if HEA_ENG.consumes_FND_MDB.vips.private[0].use_tls %}&ssl_ca={{ heat_ca_file }} {% endif %}"
