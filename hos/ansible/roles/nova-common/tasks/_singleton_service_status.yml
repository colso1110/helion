#
# (c) Copyright 2015-2016 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

- name: nova-common | _singleton_service_status | Print service being checked
  debug:
    msg: "Running service check for {{ nova_component }} \
          which should only be running on {{ inventory_hostname }}"
  when:
    ({{ singleton_host_index }} ==
    {{ consoleauth_host_group.index(inventory_hostname) }})

- name: nova-common | _singleton_service_status | Check systemd service running
  command: systemctl status "{{ nova_component }}"
  ignore_errors: yes
  changed_when: false
  register: systemctl_status_result

- name: nova-common | _singleton_service_status |
    Report status of "{{ nova_component }}"
  fail:
    msg: |
      ** FAILURE {{ nova_component }} is running where not expected **
      systemctl status {{ nova_component }} output:
      {{ systemctl_status_result.stdout }}
      {{ systemctl_status_result.stderr }}
  when:
    ({{ singleton_host_index }} !=
    {{ consoleauth_host_group.index(inventory_hostname) }}
    ) and (systemctl_status_result | success)

- name: nova-common | _singleton_service_status |
    Report status of "{{ nova_component }}"
  fail:
    msg: |
      ** FAILURE {{ nova_component }} is not running where expected **
      systemctl status {{ nova_component }} output:
      {{ systemctl_status_result.stdout }}
      {{ systemctl_status_result.stderr }}
  when:
    ({{ singleton_host_index }} ==
    {{ consoleauth_host_group.index(inventory_hostname) }}
    ) and (systemctl_status_result | failed)
