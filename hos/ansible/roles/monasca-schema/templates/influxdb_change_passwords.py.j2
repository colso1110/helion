#!/usr/bin/env python
#
# (c) Copyright 2016 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
"""A simple script to change influxdb passwords. At some point this should
   become a more full featured module.  Also this assumes that none of the
   python based influxdb clients are available on this system.
"""

ADMIN = '{{ influxdb_admin }}'
NEW_ADMIN_PASS = '{{ influxdb_admin_password }}'
OLD_ADMIN_PASS = '{{ influxdb_admin_old_password }}'
DBNAME = '{{ influxdb_dbname }}'
USERS = {}
{% for user in mon_influxdb_users %}
USERS['{{ user.username }}'] = '{{ user.password }}'
{% endfor %}

URL = '{{ influxdb_url }}'

import json
import sys
import time
import urllib
import urllib2


def influxdb_get(uri, query, db=None):
    """Runs a query via HTTP GET and returns the response as a Python list."""

    getparams = {"q": query}
    if db:
        getparams['db'] = db

    try:
        params = urllib.urlencode(getparams)
        uri = "{}&{}".format(uri,params)
        req = urllib2.urlopen(uri)
        json_value = json.loads(req.read())

        if (len(json_value['results'][0]) > 0 and
           'values' in json_value['results'][0]['series'][0]):
            return json_value['results'][0]['series'][0]['values']
        else:
            return []

    except KeyError:
        print "Query returned a non-successful result: {0}".format(json_value['results'])
        sys.exit(1)


def main(argv=None):
    """If necessary, change passwords """

    admin_password_to_use  = NEW_ADMIN_PASS
    auth_str = '?u=%s&p=%s' % (ADMIN, admin_password_to_use)
    api_uri = "{0}/query{1}".format(URL, auth_str)
    try:
#       List Users, if it fails, switch to the old admin password
        users = influxdb_get(uri=api_uri, query="SHOW USERS", db=DBNAME)
    except Exception as e:
        print e
        print 'Using old password'
        admin_password_to_use  = OLD_ADMIN_PASS
        auth_str = '?u=%s&p=%s' % (ADMIN, admin_password_to_use)
        api_uri = "{0}/query{1}".format(URL, auth_str)

    change = "SET PASSWORD FOR {0} = '{1}'"
    if OLD_ADMIN_PASS != NEW_ADMIN_PASS:
        query = change.format(ADMIN, NEW_ADMIN_PASS)
        influxdb_get(uri=api_uri, query=unicode(query))

#   Change the database user passwords
    for name, password in USERS.iteritems():
        query = change.format(name, password)
        influxdb_get(uri=api_uri, query=unicode(query))

if __name__ == "__main__":
    sys.exit(main())
