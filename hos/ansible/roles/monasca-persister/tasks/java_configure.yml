#
# (c) Copyright 2015-2016 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---
- name: Ensure vertica jdbc permissions
  file: path={{ vertica_jdbc_location }} mode=0644
  when: database_type == 'vertica'
  register: hlm_notify_monasca_persister_restart_required

- name: create conf_file from template
  template: dest={{persister_java_conf_file}} owner={{persister_user}} group={{monasca_group}} mode=0640 src=persister-config.yml.j2
  register: hlm_notify_monasca_persister_restart_required

- name: create symlink to persister config
  file:
    path: /etc/monasca/persister-config.yml
    src: "{{ 'monasca' | config_dir() }}/persister-config.yml"
    state: link
    owner: "{{persister_user}}"
    group: "{{monasca_group}}"
    mode: 0640

- name: create systemd startup script from template
  template: dest={{persister_systemd_service}} owner=root group=root mode=0644 src=monasca-persister-java.service.j2
  register: hlm_notify_monasca_persister_restart_required
  when: use_systemd

- command: systemctl daemon-reload
  when: use_systemd

- name: create upstart script from template
  template: dest=/etc/init/monasca-persister.conf owner=root group=root mode=0744 src=monasca-persister-java.conf.j2
  register: hlm_notify_monasca_persister_restart_required
  when: not use_systemd

- name: Create directory for storing md5sums
  file:
    path: "{{ monasca_persister_jar_saved_md5 | dirname }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Determine md5 of monasca-persister jar
  stat:
    path: "{{ monasca_persister_jar }}"
    follow: yes
  register: monasca_persister_jar_result

- name: Check if current md5 exists
  stat:
    path: "{{ monasca_persister_jar_saved_md5 }}"
  register: monasca_persister_jar_old_md5_file_result

- name: Get the current md5 if it exists
  slurp:
    src: "{{ monasca_persister_jar_saved_md5 }}"
  when: monasca_persister_jar_old_md5_file_result.stat.exists
  register: monasca_persister_jar_old_md5_result

- name: Mark Monasca Persister for restart if new monasca-persister jar
  debug: msg="restart monasca-persister because monasca-persister jar changed"
  changed_when: True
  when: not monasca_persister_jar_old_md5_file_result.stat.exists or
        ( monasca_persister_jar_old_md5_file_result.stat.exists and
          ( monasca_persister_jar_result.stat.md5 !=
            ( monasca_persister_jar_old_md5_result.content | b64decode ) ) )
  register: hlm_notify_monasca_persister_restart_required

- name: Write md5sum if changed or not written yet
  copy:
    dest: "{{ monasca_persister_jar_saved_md5 }}"
    content: "{{ monasca_persister_jar_result.stat.md5 }}"
  when: not monasca_persister_jar_old_md5_file_result.stat.exists or
        ( monasca_persister_jar_old_md5_file_result.stat.exists and
          ( monasca_persister_jar_result.stat.md5 !=
            ( monasca_persister_jar_old_md5_result.content | b64decode ) ) )
