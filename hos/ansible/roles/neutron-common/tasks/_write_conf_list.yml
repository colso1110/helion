#
# (c) Copyright 2016 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---
- name: neutron-common | _write_conf_list | check for conf files
  stat:
    path: "{{ neutron_conf_dir }}/{{ item.dest }}"
  register: conf_stat_result
  with_items: "{{ conf_files }}"

- name: neutron-common | _write_conf_list | get timestamp
  command: date +%Y%m%d%H%M%S
  register: time_result

- name: neutron-common | _write_conf_list | Create backups of config files
  become: yes
  command: cp {{ neutron_conf_dir }}/{{ item.dest }}
           {{ neutron_conf_dir }}/{{ item.dest }}.{{ time_result.stdout }}
  when: "conf_stat_result.results[{{ conf_files.index(item) }}].stat.exists"
  with_items: "{{ conf_files }}"

- name: neutron-common | _write_conf_list | template
  become: yes
  template:
    src: "{{ item.source }}"
    dest: "{{ neutron_conf_dir }}/{{ item.dest }}"
    owner: "{{ write_conf_file_owner }}"
    group: "{{ write_conf_file_group }}"
    mode: "{{ mode | default('0640')}}"
  with_items: "{{ conf_files }}"
  register: write_conf_list_result

- name: neutron-common | _write_conf_list |
    Delete backup files that remained unchanged
  become: yes
  file:
    path: "{{ neutron_conf_dir }}/{{ item.dest }}.{{ time_result.stdout}}"
    state: absent
  when: "write_conf_list_result.results[{{ conf_files.index(item) }}].changed == false"
  with_items: "{{ conf_files }}"

- name: neutron-common | _write_conf_list |
    Remove all but the last 10 backup files
  become: yes
  shell: ls -td {{ neutron_conf_dir }}/{{ item.dest }}.* |awk 'NR>10' |xargs rm -f
  when: "conf_stat_result.results[{{ conf_files.index(item) }}].stat.exists"
  with_items: "{{ conf_files }}"
