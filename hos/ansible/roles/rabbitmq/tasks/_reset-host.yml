#
# (c) Copyright 2015-2016 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
#
# NOTE: THIS PLAY MUST NOT RUN ON SINGLETON RABBITMQ NODE UNLESS
#       'rabbitmq_reset_option' IS SET TO 'force_reset'.
---
- name: rabbitmq | _reset-host | Check RabbitMQ is running
  command: systemctl status rabbitmq-server
  register: _rabbitmq_reset_status_result
  changed_when: false
  failed_when: false

- name: rabbitmq | _reset-host | Stop the RabbitMQ application to enable reset
  become: yes
  command: |
    timeout {{ rabbitmq_stop_app_timeout }}
    rabbitmqctl stop_app
  register: _rabbitmq_reset_stop_app_result
  when: (_rabbitmq_reset_status_result | success)

# Return a RabbitMQ node to its virgin state
#
# if rabbitmq_reset_option=reset (the default), this removes the node from
# any cluster it belongs to, removes all data from the mnesia database, such
# as configured users and vhosts, and deletes all persistent messages.
#
# If rabbitmq_reset_option=force_reset, it totally resets the state.
#
# For this command to succeed the RabbitMQ application must have been
# stopped. If the reset fails due to the timeout the cluster is generally
# unrecoverable.
- name: rabbitmq | _reset-host | Reset the RabbitMQ node
  become: yes
  command: |
    timeout {{ rabbitmq_reset_timeout }}
    rabbitmqctl {{ rabbitmq_reset_option }}
  when: (_rabbitmq_reset_stop_app_result | success)

# Remove the Erlang Mnesia DB in case the node was offline/damaged during the
# task.
- name: rabbitmq | _reset-host | Clear down Mnesia RabbitMQ message DB
  become: yes
  file:
    path: "{{ rabbitmq_env.mnesia_base }}/{{ rabbitmq_nodename }}"
    state: absent
  when: (_rabbitmq_reset_status_result | failed)
