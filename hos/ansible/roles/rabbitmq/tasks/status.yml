#
# (c) Copyright 2015-2016 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---
- name: rabbitmq | status | Check RabbitMQ service
  debug:
    msg: "Running service check on RabbitMQ"
  run_once: true

- name: rabbitmq | status | Check RabbitMQ service running
  command: systemctl status "{{ rabbitmq_service_name }}"
  changed_when: false
  failed_when: false
  register: _rabbitmq_systemctl_status_result

- name: rabbitmq | status | Report status of RabbitMQ
  fail:
    msg: |
      {{ rabbitmq_service_name }} is not running.
      systemctl status {{ rabbitmq_service_name }}
      {{ _rabbitmq_systemctl_status_result.stdout }}
      {{ _rabbitmq_systemctl_status_result.stderr }}
  when: (_rabbitmq_systemctl_status_result | failed)

- name: rabbitmq | status | Check RabbitMQ running hosts in cluster
  become: yes
  shell: >
    rabbitmqctl cluster_status 2>/dev/null |
    awk '/running_nodes,\[[^]]+,/,/]},/' |
    sed 's/,\([^[]\)/,\n\1/g'
  register: _rabbitmq_cluster_status_result
  changed_when: false
  failed_when: >
    (_rabbitmq_cluster_status_result | failed) or
    (_rabbitmq_cluster_status_result.stdout_lines | length) !=
    (rabbitmq_cluster_size | int)
  when: (rabbitmq_clustered | bool)

# Note: We always take the TLS details from CP here.
- name: rabbitmq | status | Validate RabbitMQ clients connection TLS/TCP status
  become: yes
  shell: >
    rabbitmqctl -q list_connections ssl state ssl_protocol user name |
    sort -u |
    awk -F'\t'
    '(($1 ~ /^{{ (not (rabbitmq_cp.tls_enabled | bool)) | lower }}$/ &&
    $2 !~ /^(closing|closed)$/) ||
    $3 !~ /^tlsv1.2$|^$/) &&
    $4 !~ /^$/'
  register: _rabbitmq_tls_status_result
  changed_when: false
  failed_when: >
    (_rabbitmq_tls_status_result | failed) or
    (_rabbitmq_tls_status_result.stdout_lines | length) > 0
  when: (rabbitmq_tls_check_status | bool)
