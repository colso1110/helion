#
# (c) Copyright 2015-2016 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

- name: CEP-OSD | start | Notify systemd of changes
  become: yes
  command: systemctl daemon-reload

- name: CEP-OSD | start | Fetch osds running on this node
  ceph_fetch_osd_numbers:
    hostname: "{{ host.my_dimensions.hostname }}"
    cluster_name: "{{ ceph_cluster }}"
  register: ceph_fetch_osd_result

- name: CEP-OSD | start |
        Start the ceph OSD service and enable it to run on boot
  become: yes
  service: name=ceph-osd@"{{ item }}" state=started enabled=yes
  with_items: ceph_fetch_osd_result.result
  register: ceph_osdstart_result

- name: CEP-OSD | start | Restart the ceph OSD service
  become: yes
  service: name=ceph-osd@"{{ item.item }}" state=restarted
  when: ((not (hlm_notify_ceph_restart_required is not defined) and
        hlm_notify_ceph_restart_required.changed and
        ceph_osd_restart_result is not defined) or
        (hlm_notify_ceph_osd_restart_required is defined and
        hlm_notify_ceph_osd_restart_required.changed and
        ceph_osd_restart_result is not defined)) and
        item.changed == False
  with_items:
    - "{{ ceph_osdstart_result.results |
          osd_restart_list(osd_configure_result | default()) }}"
  register: ceph_osd_restart_result

- name: CEP-OSD | start | Wait for OSD services to come up
  shell:  ceph --cluster {{ ceph_cluster }} osd dump |
          grep -w osd.{{ item }} | awk '{print $2}' | grep up
  register: ceph_osd_dump_result
  until: ceph_osd_dump_result.stdout.find("up") != -1
  with_items: ceph_fetch_osd_result.result
  retries: "{{ osd_settle_retry_count }}"
  delay: "{{ osd_settle_time }}"
  when: ceph_osdstart_result.changed or ceph_osd_restart_result.changed
