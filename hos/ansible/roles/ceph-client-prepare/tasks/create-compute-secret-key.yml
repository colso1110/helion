#
# (c) Copyright 2015-2016 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

- name: ceph-client-prepare | create-compute-secret-key |
    include vars from ceph_user_model.yml
  include_vars: ceph_user_model.yml

- name: ceph-client-prepare | create-compute-secret-key | Create key file
  become: yes
  command: >
    ceph --cluster {{ ceph_cluster }} auth get-key
    client.{{ item.user.name }} -o /etc/ceph/client.{{ item.user.name }}.key
  when: item.user.secret_id is defined
  with_items: "{{ ceph_user_models }}"
  delegate_to: "{{ ceph_admin_node }}"

# key copy is a two step-operation to avoid firewall issues

# Ensure directory exists on deployer
- name: ceph-client-prepare | create-compute-secret-key |
    Create a local temporary directory
  command: mktemp -d
  register: ceph_local_mktempdir_result
  delegate_to: "localhost"
  run_once_per: verb_hosts.NOV_CMP
  become: no
  # must be owned by local user for successful fetch operation

- name: ceph-client-prepare | create-compute-secret-key |
    Make the fact known to all hosts in the host group
  set_fact: >
    ceph_local_tempdir="{{
    hostvars[item].ceph_local_mktempdir_result.stdout }}"
  when: >
    hostvars.get(item) != None and
    hostvars.get(item).get('ceph_local_mktempdir_result') != None
  with_items: "{{ groups[verb_hosts.NOV_CMP] | default([]) }}"

# 1. copy to deployment node
- name: ceph-client-prepare | create-compute-secret-key |
    Stage key for deployment
  become: yes
  fetch:
    src: "/etc/ceph/client.{{ item.user.name }}.key"
    dest: "{{ ceph_local_tempdir }}/"
    flat: yes
  delegate_to: "{{ ceph_admin_node }}"
  run_once_per: verb_hosts.NOV_CMP
  when: item.user.secret_id is defined
  with_items: "{{ ceph_user_models }}"

# 2. copy key to target
- name: ceph-client-prepare | create-compute-secret-key |
    Copy key file to /etc/ceph directory
  become: yes
  copy:
    src: "{{ ceph_local_tempdir }}/client.{{ item.user.name }}.key"
    dest: "/etc/ceph/client.{{ item.user.name }}.key"
    owner: "{{ ceph_user }}"
    group: "{{ ceph_group }}"
    mode: 0644
  when: item.user.secret_id is defined and
        ceph_local_tempdir is defined
  with_items: "{{ ceph_user_models }}"

- name: ceph-client-prepare | create-compute-secret-key |
    Delete local temporary directory "{{ ceph_local_tempdir }}"
  file:
    dest: "{{ ceph_local_tempdir }}"
    state: absent
  delegate_to: "localhost"
  run_once_per: verb_hosts.NOV_CMP

- name: ceph-client-prepare | create-compute-secret-key |
    Generate "/etc/ceph/{{ item.user.name }}.xml"
  become: yes
  template:
    src: secret.xml.j2
    dest: "/etc/ceph/{{ item.user.name }}.xml"
    owner: "{{ ceph_user }}"
    group: "{{ ceph_group }}"
    mode: 0644
  when: item.user.secret_id is defined
  with_items: "{{ ceph_user_models }}"

- name: ceph-client-prepare | create-compute-secret-key | Define the secret
  become: yes
  command: virsh secret-define --file /etc/ceph/{{ item.user.name }}.xml
  when: item.user.secret_id is defined
  with_items: "{{ ceph_user_models }}"

- name: ceph-client-prepare | create-compute-secret-key | Set secret value
  become: yes
  shell: 'virsh secret-set-value --secret {{ item.user.secret_id }} --base64
    $(cat /etc/ceph/client.{{ item.user.name }}.key)'
  when: item.user.secret_id is defined
  with_items: "{{ ceph_user_models }}"

- name: ceph-client-prepare | create-compute-secret-key |
    Delete the keys from /etc/ceph directory
  become: yes
  file:
    dest: "/etc/ceph/client.{{ item.user.name }}.key"
    state: absent
  when: item.user.secret_id is defined
  with_items: "{{ ceph_user_models }}"
  run_once_per: verb_hosts.NOV_CMP
