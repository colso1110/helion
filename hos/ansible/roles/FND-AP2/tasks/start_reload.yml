#
# (c) Copyright 2015-2016 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---
# This playbook is for use by any apache-hosted service. It ensures that
# the apache service is started and will optionally reload apache if the
# apache_reload_requested variable is set to true (default is false)
# or restart apache if the apache_restart_requested variable is set to true
# (default is false).
# If apache was either started or reloaded and the keystone site is enabled,
# keystone status is invoked to ensure that keystone is up and running
# before returning from this playbook.

- name: FND-AP2 | start_reload | Ensure that Apache is started
  become: yes
  service:
    name: apache2
    state: started
  register: apache_started

- name: FND-AP2 | start_reload | pause after start
  pause:
    seconds: 3

- name: FND-AP2 | status | Check system service running
  command: systemctl status "{{ apache2_service }}"
  ignore_errors: yes
  register: apache_start_status
# HLM-3227 added retry on start to fix race in current apache version
- name: FND-AP2 | start_reload | start apache if previous failed
  become: yes
  service:
    name: apache2
    state: started
  when: apache_start_status is defined and apache_start_status | failed

- name: FND-AP2 | start_reload | Check Apache started status OK
  become: yes
  shell: "systemctl status apache2"
  when: apache_started.changed

# This is the list currently on this node and not from cp as we could be changing this list
- name: FND-AP2 | start_reload | Find out which ports apache traffic is running on
  become: yes
  shell: |
    apache2ctl -D DUMP_VHOSTS 2>/dev/null |
    awk '/sites-enabled/ \
    {IP = "127.0.0.1"; \
     if(NF > 2 && \
        $2 ~ /^[0-9]?[0-9]?[0-9]\.[0-9]?[0-9]?[0-9]\.[0-9]?[0-9]?[0-9]\.[0-9]?[0-9]?[0-9]$/) \
     {IP = $2}; \
     sub(/.*:/,"",$1); \
     printf "{\"ip\":\"%s\",\"port\":\"%s\"}\n",IP,$1}'
  register: apachectl_results
  when: ((apache_reload_requested | default(false) | bool) == True ) and (not apache_started.changed)

- name: FND-AP2 | start_reload | set apache fact to block traffic
  set_fact:
    apache2_ip_port: [ "{{ apachectl_results.stdout_lines | join(',') }}" ]
  when: apachectl_results.stdout_lines is defined

- include: "{{ playbook_dir }}/roles/iptables/tasks/iptables-add.yml"
  vars:
    iptables_chain: "{{ apache2_iptables_chain }}"
    iptables_ip_port: "{{ apache2_ip_port }}"
  when: ((apache_reload_requested | default(false) | bool) == True )  and (not apache_started.changed)

- name: FND-AP2 | start_reload | Reload apache if requested
  become: yes
  service:
    name: apache2
    state: reloaded
  when: ((apache_reload_requested | default(false) | bool) == True)  and (not apache_started.changed)
        and (apache_restart_requested | default(false) | bool == False)

- name: FND-AP2 | start_reload | Check Apache started status OK
  become: yes
  shell: "systemctl status apache2"
  when: ((apache_reload_requested | default(false) | bool) == True) and (not apache_started.changed)

- include: "{{ playbook_dir }}/roles/iptables/tasks/iptables-delete.yml"
  vars:
    iptables_chain: "{{ apache2_iptables_chain }}"
    iptables_ip_port: "{{ apache2_ip_port }}"
  when: ((apache_reload_requested | default(false) | bool) == True) and (not apache_started.changed)

- name: FND-AP2 | start_reload | Restart apache if requested
  become: yes
  service:
    name: apache2
    state: restarted
  when: ((apache_restart_requested | default(false) | bool) == True) and (not apache_started.changed)

# HLM-3227: Pause should allow apache restart to fail
# if the modwsgi processes havnt shutdown
- name: FND-AP2 | start_reload | pause after restart
  pause:
    seconds: 3
  when: ((apache_restart_requested | default(false) | bool) == True) and (not apache_started.changed)

- name: FND-AP2 | status | Check system service running
  command: systemctl status "{{ apache2_service }}"
  when: ((apache_restart_requested | default(false) | bool) == True) and (not apache_started.changed)
  ignore_errors: yes
  register: apache_restart_status

- name: FND-AP2 | start_reload | Restart apache if requested
  become: yes
  service:
    name: apache2
    state: restarted
  when: apache_restart_status is defined and apache_restart_status | failed

- include: status.yml

- name: FND-AP2 | start_reload | Check if keystone site enabled
  become: yes
  stat:
    path: /etc/apache2/sites-enabled/keystone-modwsgi.conf
  register: keystone_site_file

- include: "{{ playbook_dir }}/roles/KEY-API/tasks/status.yml"
  when: keystone_site_file.stat.exists and (
        apache_started.changed or
        ((apache_reload_requested | default(false) | bool) == True) or
        ((apache_restart_requested | default(false) | bool) == True)
        )
