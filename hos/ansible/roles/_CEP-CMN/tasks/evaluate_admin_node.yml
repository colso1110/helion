#
# (c) Copyright 2015-2016 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

- name: _CEP-CMN | evaluate_admin_node | Fetch the ip addresses of monitors
  local_action: >
    shell grep "{{ item }} ansible_ssh_host" hosts/verb_hosts | cut -d "=" -f 2
  register: ceph_monitor_ip_result
  with_items:
    - "{{ ceph_monitors | default() }}"

- name: _CEP-CMN | evaluate_admin_node | Check connectivity to all monitors
  become: no
  command: >
    ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
    {{ item }} exit
  with_items:
    - "{{ ceph_monitor_ip_result.results | default() | fetch_stdout  }}"
  ignore_errors: yes
  register: ceph_mon_connectivity_result
  delegate_to: localhost

- name: _CEP-CMN | evaluate_admin_node | Filter out the active monitors
  set_fact: ceph_active_mon_node="{{ item.item }}"
  when: item.rc == 0
  with_items:
    - "{{ ceph_mon_connectivity_result.results }}"
  register: ceph_active_mon_nodes_result

- name: _CEP-CMN | evaluate_admin_node | Make a list of active monitors
  set_fact: ceph_active_monitors="{{ ceph_active_mon_nodes_result.results |
    selectattr('ansible_facts', 'defined') |
    map(attribute='ansible_facts.ceph_active_mon_node') | list }}"

- name: _CEP-CMN | evaluate_admin_node | Fail if monitors are not reachable
  fail: msg="None of the Ceph monitor nodes are currently reachable."
  when: "{{ ceph_active_monitors is defined and
    ( ( ceph_active_monitors | length ) < 1 ) }}"

- name: _CEP-CMN | evaluate_admin_node |
        Check if any of the active monitor nodes has admin keyring
  stat:
    path: /etc/ceph/{{ ceph_cluster }}.client.admin.keyring
  register: ceph_monitor_admin_keyring_result
  delegate_to: "{{ item }}"
  with_items: "{{ ceph_active_monitors | default() }}"

- name: _CEP-CMN | evaluate_admin_node |
        Check if any of the active monitor nodes has mon keyring
  stat:
    path: /etc/ceph/{{ ceph_cluster }}.mon.keyring
  register: ceph_monitor_mon_keyring_result
  delegate_to: "{{ item.item }}"
  when: item.stat.exists == True
  with_items: "{{ ceph_monitor_admin_keyring_result.results | default() }}"

- name: _CEP-CMN | evaluate_admin_node |
        Select one of the monitors having both keyrings as the admin node
  set_fact: ceph_admin_node="{{ ceph_monitor_mon_keyring_result.results |
    one_from_list(True) }}"

- name: _CEP-CMN | evaluate_admin_node |
        Set bootstrapping done to False if admin node is not yet selected
  set_fact: ceph_monitor_bootstrapped=False
  when: ceph_admin_node == ''

- name: _CEP-CMN | evaluate_admin_node |
        Set bootstrapping done to True if admin node is selected
  set_fact: ceph_monitor_bootstrapped=True
  when: ceph_admin_node != ''

- name: _CEP-CMN | evaluate_admin_node |
        Select first active monitor node as the Ceph admin node
  set_fact: ceph_admin_node="{{ ceph_active_mon_nodes_result.results |
    selectattr('ansible_facts', 'defined') |
    map(attribute='ansible_facts.ceph_active_mon_node') | list | first }}"
  when: ceph_admin_node == ''
