{#
#
# (c) Copyright 2015-2016 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
#}
{% if CEP_OSD_I is defined %}
{% set myconsumes = CEP_OSD_I.consumes_CEP_MON.members['ceph-public'] %}
{% set mybind = host.bind.CEP_OSD['ceph-public'] %}
{% elif CEP_RGW is defined %}
{% set myconsumes = CEP_RGW.consumes_CEP_MON.members['ceph-public'] %}
{% if host.bind.CEP_RGW is defined %}
{% set mybind = host.bind.CEP_RGW['public'] %}
{% elif host.bind.CEP_MON is defined %}
{% set mybind = host.bind.CEP_MON['ceph-public'] %}
{% endif %}
{% elif CEP_MON is defined %}
{% set myconsumes = CEP_MON.consumes_CEP_MON.members['ceph-public'] %}
{% if host.bind.CEP_MON is defined %}
{% set mybind = host.bind.CEP_MON['ceph-public'] %}
{% endif %}
{% endif %}
[global]
mon_initial_members = {% for server in myconsumes -%}
    {{ server.host }}{% if not loop.last %},{% endif %}
{% endfor %}

mon_host = {% for server in myconsumes -%}
    {{ server.host }}{% if not loop.last %},{% endif %}
{% endfor %}


{% if CEP_OSD_I is defined and ':' in mybind.port %}
ms bind port min = {{ mybind.port.split(':')[0] }}
ms bind port max = {{ mybind.port.split(':')[1] }}
{% endif %}
{% if mybind is defined %}
public addr = {{ mybind.ip_address }}
{% endif %}

{% if host.bind.CEP_OSD_I is defined %}
# cluster network only defined on OSDs
cluster addr = {{ host.bind.CEP_OSD_I['ceph-cluster'].ip_address }}
{% endif %}

# Cluster log file
{% if CEP.audit.enabled %}
mon cluster log file = default={{ CEP.audit.dir }}/ceph/$cluster-cluster.$channel.log cluster=/var/log/ceph/$cluster-cluster.log
{% else %}
mon cluster log file = /var/log/ceph/$cluster-cluster.log
{% endif %}

# Log levels
debug mon = {{ mon_log_level }}
debug osd = {{ osd_log_level }}
debug rgw = {{ rgw_log_level }}

auth_cluster_required = cephx
auth_service_required = cephx
auth_client_required = cephx
filestore_xattr_use_omap = true
fsid = {{ fsid }}

osd pool default size = {{ osd_pool_default_size }}
osd pool default pg num = {{ osd_pool_default_pg_num }}
osd pool default pgp num = {{ osd_pool_default_pg_num }}

[client.admin]
keyring = /etc/ceph/{{ ceph_cluster }}.client.admin.keyring

[mon]
max open files = {{ mon_max_open_files }}

{% for server in myconsumes -%}
[mon.{{ server.host }}]
host = {{ server.host }}

{% endfor %}

[osd]
journal aio = false
osd journal size = {{ osd_journal_size }}

osd mount options xfs = noatime
osd mkfs options xfs =  -i size=2048
max open files = {{ osd_max_open_files }}

{% if extra is defined %}
{% for entry in extra %}
[{{ entry }}]
{% for key in extra[entry] %}
{{ key }} = {{ extra[entry][key] }}
{% endfor %}
{% endfor %}
{% endif %}

{% if ceph_rgw_hostname is defined %}
[client.radosgw.{{ radosgw_user }}]
host = {{ ceph_rgw_hostname }}
keyring = /etc/ceph/{{ ceph_cluster }}.client.{{ radosgw_user }}.keyring
rgw socket path = {{ rgw_socket_path }}/radosgw.sock
log file = /var/log/ceph/radosgw.log
rgw keystone url = {{ rgw_keystone.internal_endpoint }}
rgw keystone accepted roles = {{ rgw_keystone_accepted_roles }}
rgw keystone admin user = {{ rgw_keystone.rgw_admin_user }}
rgw keystone admin password = {{ rgw_keystone.rgw_admin_password }}
rgw keystone admin tenant = {{ rgw_keystone.service_tenant }}
rgw s3 auth use keystone = {{ rgw_s3_auth_use_keystone }}
{% endif %}
