#
# (c) Copyright 2015-2016 Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
---

- name: freezer-agent | install | Update venv cache
  become: yes
  install_package:
    cache: update

- name: freezer-agent | install | Install apt dependencies
  become: yes
  apt:
    state: latest
    name: "{{ item }}"
  with_items: freezer_agent_packages
  when: ansible_os_family == "Debian"

- name: freezer-agent | install | Install yum dependencies
  become: yes
  yum:
    state: latest
    name: "{{ item }}"
  with_items: freezer_agent_packages
  when: ansible_os_family == "RedHat"

- name: freezer-agent | install | Install Freezer_agent virtual env
  become: yes
  install_package:
    name: freezer_agent
    service: freezer-agent
    state: present
    activate: act_off
  register: freezer_agent_install_result

- name: freezer-agent | install | Register freezer-scheduler with systemd
  become: yes
  setup_systemd:
    name: freezer-scheduler
    service: freezer-agent
    cmd: freezer-scheduler
    user: root
    group: root
    args: "start --config-file {{ freezer_agent_conf_dir }}/scheduler.conf "

- name: freezer-agent | install | Setting systemd to restart on failure
  become: yes
  lineinfile:
    dest: "/usr/lib/systemd/system/freezer-scheduler.service"
    line: "Restart=on-failure"
    insertafter: "^\\[Service]"
  register: insert_line_restart_result

- name: freezer-agent | install | Add environment loading to systemd config file
  become: yes
  lineinfile:
    dest: "/usr/lib/systemd/system/freezer-scheduler.service"
    line: "EnvironmentFile=-{{ freezer_agent_conf_dir }}/systemd_env_vars.cfg"
    insertafter: "^Restart=on-failure"
  register: insert_line_env_result

- name: freezer-agent | install | Notify Systemd
  become: yes
  command: systemctl daemon-reload
  when: insert_line_env_result.changed or insert_line_restart_result.changed

- name: freezer-agent | install | Set the freezer-scheduler to start on reboot
  become: yes
  service:
    name: freezer-scheduler
    enabled: yes

- name: freezer-agent | install | Set service directories
  set_fact:
    freezer_agent_conf_dir: "{{ 'freezer-agent' | config_dir(freezer_agent_install_result.version) }}"
    freezer_agent_bin_dir: "{{ 'freezer-agent' | bin_dir(freezer_agent_install_result.version) }}"

- name: freezer-agent | install | Check if Freezer agent is available
  become: yes
  stat:
    path: "{{ freezer_agent_bin_dir }}/freezerc"
  register: freezer_agent_bin_result

- name: freezer-agent | install | Check if Freezer scheduler is available
  become: yes
  stat:
    path: "{{ freezer_agent_bin_dir }}/freezer-scheduler"
  register: freezer_scheduler_bin_result

- name: freezer-agent | install | Enabling freezer agent for all users
  become: yes
  file:
    src: "{{ freezer_agent_bin_dir }}/freezerc"
    dest: /usr/bin/freezer-agent
    state: link
    force: yes
  when: freezer_agent_bin_result.stat.exists and freezer_agent_bin_result.stat.xusr

- name: freezer-agent | install | Enabling freezer scheduler for all users
  become: yes
  file:
    src: "{{ freezer_agent_bin_dir }}/freezer-scheduler"
    dest: /usr/bin/freezer-scheduler
    state: link
    force: yes
  when: freezer_scheduler_bin_result.stat.exists and freezer_scheduler_bin_result.stat.xusr

- name: freezer-agent | configure | Create directories
  become: yes
  file:
    path: "{{ item }}"
    mode: 0770
    state: directory
  with_items:
    - /etc/freezer
    - /etc/freezer/scheduler
    - /etc/freezer/scheduler/conf.d
    - /root/.freezer

- name: freezer-agent | configure | Create Freezer log directory
  become: yes
  file:
    path: "{{ freezer_agent_log_dir }}"
    owner: root
    group: "{{ freezer_log_group }}"
    mode: 0750
    state: directory

- name: freezer-agent | configure | Touch Freezer log files
  become: yes
  file:
    path: "{{ item }}"
    owner: root
    group: "{{ freezer_log_group }}"
    mode: 0640
    state: touch
  with_items:
    - "{{ freezer_agent_log_file }}"
    - "{{ freezer_agent_json_log_file }}"
    - "{{ freezer_scheduler_log_file }}"
    - "{{ freezer_scheduler_json_log_file }}"
